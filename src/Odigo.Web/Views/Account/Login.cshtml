@model LoginViewModel

@using Odigo.Web.Models;
@using Odigo.Model.Model;

@{
    ViewBag.Title = "Logon";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .row.no-gutters {
        margin-right: 0;
        margin-left: 0;
    }

        .row.no-gutters > [class^="col-"],
        .row.no-gutters > [class*=" col-"] {
            padding-right: 0;
            padding-left: 0;
        }
</style>

<div class="row">
    <div class="col-md-12">
        <div>
            <h1 class="text-danger">Log In</h1>
            <div>Please enter your <b>Email</b> and <b>Password</b> in the input box below, and click the Login button to logon</div>
            <hr style="margin-top:7px" />
        </div>
    </div>
</div>

<br />
@*<br />*@

@*<div class="row no-gutters" style="background:#f2f3f5 ">*@
<div class="row no-gutters" style="background:#f4f4f6 ">
    <div class="col-md-4  ">
        <div>
            <img class="img-responsive" src="~/Content/Images/black_login.jpg" style="background-color:#f2f3f5; " />
        </div>
    </div>

    <div class="col-md-8">
        @*<div style="height:260px; background-color:#f2f3f5; width: 100%;">*@
        @using (Html.BeginForm("Logon", "Registration", new { Area = "Student" }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            <div style="padding-bottom:15px; ">

                @*<div style="height: 260px; padding-bottom:15px; background:red ">*@
                <div style="height:25px; "></div>
                <div style="background-color:#fff; border:solid 1px silver; border-radius:5px; margin:40px 20px 0 20px; padding:20px 20px 0 20px; ">

                    <div class="form-group margin-bottom-5">
                        @Html.LabelFor(m => m.Email, new { @class = "col-md-3 control-label" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", required = "required" })
                            @Html.ValidationMessageFor(m => m.Email, null, new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group margin-bottom-5">
                        @Html.LabelFor(m => m.Password, new { @class = "col-md-3 control-label" })
                        <div class="col-md-8">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", required = "required" })
                            @Html.ValidationMessageFor(m => m.Password, null, new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="col-md-offset-3 col-md-8">
                            <input type="submit" value="Login" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </div>


        }

        @*</div>*@
    </div>

</div>

<br />
<div class="row">
    <div class="col-md-12">
        @if (TempData["Message"] != null)
        {
            @Html.Partial("_Message", (Message)TempData["Message"])
        }
    </div>
</div>



<div class="row">
    <div class="col-md-12">
        <div style="border-top:solid gainsboro 1px;margin-top:20px; ">If you encounter any difficulty, kindly send an email to support@nitware.com.ng or  call the following numbers ...</div>
    </div>
</div>


<br />
<br />


























@*@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<h2>@ViewBag.Title.</h2>
<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>Use a local account to log in.</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Log in" class="btn btn-default" />
                    </div>
                </div>
                <p>
                    @Html.ActionLink("Register as a new user", "Register")
                </p>
                Enable this once you have account confirmation enabled for password reset functionality
                    <p>
                        @Html.ActionLink("Forgot your password?", "ForgotPassword")
                    </p>
            }
        </section>
    </div>
    <div class="col-md-4">
        <section id="socialLoginForm">
            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
        </section>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@